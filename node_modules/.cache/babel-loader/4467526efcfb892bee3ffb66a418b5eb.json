{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\Registration\\\\FormPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { AccountContext } from \"../../Context/AccountProvider\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { GetAxios, PostAxios } from \"../../Fetch/Fetching\";\nimport { useForm, Controller } from 'react-hook-form';\nimport ReactSelect from 'react-select';\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"russia\",\n  label: \"Россия\"\n}, {\n  value: \"USA\",\n  label: \"США\"\n}, {\n  value: \"beloruss\",\n  label: \"Белорусь\"\n}, {\n  value: \"chehia\",\n  label: \"Чехия\"\n}];\nconst paramsHook = {\n  required: \"Поле обязательно к заполнению\",\n  minLength: {\n    value: 3,\n    message: \"Минимум 3 символов\"\n  }\n};\nconst paramEmal = {\n  required: \"Поле обязательно к заполнению\",\n  pattern: {\n    value: /^((([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я\\.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/u,\n    message: \"Пожалуйста введите валидный email\"\n  }\n};\n\nconst getValueSelect = value => value ? options.find(option => option.value == value) : '';\n\nfunction FormPost() {\n  _s();\n\n  var _errors$email, _errors$firstName, _errors$lastName, _errors$password, _errors$address$city, _errors$address$stree, _errors$address$house;\n\n  const {\n    usSetCheckId\n  } = useContext(AccountContext);\n  const {\n    singIn,\n    fromPage\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const NavigateTo = () => navigate(fromPage, {\n    replace: true\n  });\n\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    reset,\n    control\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const [errorReg, setErrorReg] = useState('');\n\n  const inputErr = str => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0432 \\u043F\\u043E\\u043B\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 30\n  }, this);\n\n  const inputNull = () => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u041F\\u043E\\u043B\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043A \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044E\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 28\n  }, this);\n\n  const EmailError = () => alert('Email-адресс уже зарегестрирован');\n\n  const useSubmitData = async data => {\n    const MassUsers = await GetAxios('userCard');\n    const massEmailMatch = await MassUsers.filter(item => item.email == data.email);\n\n    if (massEmailMatch.length) {\n      EmailError();\n    } else {\n      const body = {\n        email: data.email,\n        firstName: data.firstName,\n        lastName: data.lastName,\n        password: data.password\n      };\n      const postedUser = await PostAxios('userCard', body);\n      singIn(postedUser, NavigateTo);\n      usSetCheckId(false);\n      reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(useSubmitData),\n      class: \"reg__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"email\",\n        children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0441 \\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__emal\",\n          ...register(\"email\", paramEmal),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) || inputErr('Email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 63\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"firstName\",\n        children: [\"\\u0418\\u043C\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__f-name\",\n          ...register(\"firstName\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.firstName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message) || inputErr('firstName')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 67\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"lastName\",\n        children: [\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__l-name\",\n          ...register(\"lastName\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.lastName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message) || inputErr('lastName')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 66\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"pass\",\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__pass\",\n          ...register(\"password\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message) || inputErr('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 66\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"adress.country\",\n        rules: {\n          required: 'Поле обязательно для заполнения'\n        },\n        render: _ref => {\n          let {\n            field: {\n              onChange,\n              value\n            },\n            fieldState: {\n              error\n            }\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ReactSelect, {\n              placeholder: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430\",\n              options: options,\n              value: getValueSelect(value),\n              onChange: newValue => onChange(newValue.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reg__error\",\n              children: [\" \", error && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: (error === null || error === void 0 ? void 0 : error.message) || inputErr('address')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 61\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"address.city\",\n        children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          ...register(\"address.city\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.address.city) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$address$city = errors.address.city) === null || _errors$address$city === void 0 ? void 0 : _errors$address$city.message) || inputErr('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 70\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"address.street\",\n        children: [\"\\u0423\\u043B\\u0438\\u0446\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          ...register(\"address.street\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.address.street) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$address$stree = errors.address.street) === null || _errors$address$stree === void 0 ? void 0 : _errors$address$stree.message) || inputErr('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 72\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"address.house\",\n        children: [\"\\u0414\\u043E\\u043C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          ...register(\"address.house\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.address.house) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$address$house = errors.address.house) === null || _errors$address$house === void 0 ? void 0 : _errors$address$house.message) || inputErr('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 71\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"reg__btn\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"\\u0437\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormPost, \"eNS7l7/PX3RZW4XrFDf5UZcanG8=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = FormPost;\nexport default FormPost; //value={getValueSelect(value)} onChange={newValue => onChange(newValue.value)}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPost\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/Registration/FormPost.jsx"],"names":["React","useState","useEffect","useContext","useRef","useNavigate","AccountContext","AuthContext","GetAxios","PostAxios","useForm","Controller","ReactSelect","getValue","options","value","label","paramsHook","required","minLength","message","paramEmal","pattern","getValueSelect","find","option","FormPost","usSetCheckId","singIn","fromPage","navigate","NavigateTo","replace","register","formState","errors","isValid","handleSubmit","reset","control","mode","errorReg","setErrorReg","inputErr","str","inputNull","EmailError","alert","useSubmitData","data","MassUsers","massEmailMatch","filter","item","email","length","body","firstName","lastName","password","postedUser","field","onChange","fieldState","error","newValue","address","city","street","house"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useRef } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AccountContext } from \"../../Context/AccountProvider\";\r\nimport { AuthContext } from \"../../Context/AuthProvider\";\r\n\r\nimport { GetAxios, PostAxios } from \"../../Fetch/Fetching\"\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport ReactSelect from 'react-select'\r\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\r\n\r\n\r\n\r\nconst options = [\r\n   {\r\n      value: \"russia\",\r\n      label: \"Россия\"\r\n   },\r\n   {\r\n      value: \"USA\",\r\n      label: \"США\"\r\n   },\r\n   {\r\n      value: \"beloruss\",\r\n      label: \"Белорусь\"\r\n   },\r\n   {\r\n      value: \"chehia\",\r\n      label: \"Чехия\"\r\n   }\r\n]\r\n\r\nconst paramsHook = {\r\n   required: \"Поле обязательно к заполнению\",\r\n   minLength: {\r\n      value: 3,\r\n      message: \"Минимум 3 символов\"\r\n   }\r\n}\r\nconst paramEmal = {\r\n   required: \"Поле обязательно к заполнению\",\r\n   pattern: {\r\n      value: /^((([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я\\.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/u,\r\n      message: \"Пожалуйста введите валидный email\"\r\n   }\r\n}\r\n\r\nconst getValueSelect = (value) => value ? options.find((option) => option.value == value) : ''\r\nfunction FormPost() {\r\n   const { usSetCheckId } = useContext(AccountContext)\r\n   const { singIn, fromPage } = useContext(AuthContext)\r\n   const navigate = useNavigate()\r\n   const NavigateTo = () => navigate(fromPage, { replace: true })\r\n   const {\r\n      register,\r\n      formState: { errors, isValid, },\r\n      handleSubmit,\r\n      reset,\r\n      control\r\n   } = useForm({\r\n      mode: \"onChange\"\r\n   })\r\n\r\n   const [errorReg, setErrorReg] = useState('')\r\n\r\n   const inputErr = (str) => <p>Ошибка в поле <span>{str}</span></p>\r\n   const inputNull = () => <p>Поле обязательно к заполнению</p>\r\n   const EmailError = () => alert('Email-адресс уже зарегестрирован')\r\n\r\n   const useSubmitData = async (data) => {\r\n      const MassUsers = await GetAxios('userCard')\r\n      const massEmailMatch = await MassUsers.filter((item) => item.email == data.email)\r\n      if (massEmailMatch.length) {\r\n         EmailError()\r\n      }\r\n      else {\r\n         const body = {\r\n            email: data.email,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            password: data.password\r\n         }\r\n         const postedUser = await PostAxios('userCard', body)\r\n         singIn(postedUser, NavigateTo)\r\n         usSetCheckId(false)\r\n         reset()\r\n      }\r\n   }\r\n\r\n\r\n   return (\r\n      <>\r\n         <form onSubmit={handleSubmit(useSubmitData)} class=\"reg__form\">\r\n            <label class=\"reg__label\" for=\"email\">Адресс Электронной почты:\r\n               <input class=\"reg__input\" id=\"reg__emal\" {...register(\"email\", paramEmal)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.email && <div>{errors?.email?.message || inputErr('Email')}</div>} </div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"firstName\">Имя:\r\n               <input class=\"reg__input\" id=\"reg__f-name\" {...register(\"firstName\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.firstName && <div>{errors?.firstName?.message || inputErr('firstName')}</div>} </div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"lastName\">Фамилия:\r\n               <input class=\"reg__input\" id=\"reg__l-name\" {...register(\"lastName\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.lastName && <div>{errors?.lastName?.message || inputErr('lastName')}</div>} </div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"pass\">Пароль:\r\n               <input class=\"reg__input\" id=\"reg__pass\"  {...register(\"password\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.password && <div>{errors?.password?.message || inputErr('password')}</div>} </div>\r\n            </label>\r\n            <Controller control={control} name=\"adress.country\" rules={{ required: 'Поле обязательно для заполнения' }}\r\n               render={({ field: { onChange, value }, fieldState: { error } }) =>\r\n                  <div>\r\n                     <ReactSelect placeholder=\"Страна\" options={options} value={getValueSelect(value)} onChange={newValue => onChange(newValue.value)} />\r\n                     <div className=\"reg__error\"> {error && <div>{error?.message || inputErr('address')}</div>} </div>\r\n                  </div>\r\n               } />\r\n            <label class=\"reg__label\" for=\"address.city\">Город:\r\n               <input class=\"reg__input\"  {...register(\"address.city\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.address.city && <div>{errors?.address.city?.message || inputErr('password')}</div>} </div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"address.street\">Улица:\r\n               <input class=\"reg__input\"   {...register(\"address.street\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.address.street && <div>{errors?.address.street?.message || inputErr('password')}</div>} </div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"address.house\">Дом:\r\n               <input class=\"reg__input\"   {...register(\"address.house\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.address.house && <div>{errors?.address.house?.message || inputErr('password')}</div>} </div>\r\n            </label>\r\n\r\n            <button class=\"reg__btn\" type=\"submit\" disabled={!isValid} >зарегестрироваться </button>\r\n\r\n         </form>\r\n      </>\r\n   )\r\n}\r\nexport default FormPost\r\n\r\n//value={getValueSelect(value)} onChange={newValue => onChange(newValue.value)}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}