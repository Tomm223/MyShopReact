{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\Registration\\\\FormPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { AuthContext } from \"../Context/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormPost() {\n  _s();\n\n  const {\n    singIn,\n    fromPage\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const form = useRef();\n  const formElem = form.current;\n  const [users, setUsers] = useState('');\n  const [inputData, setInputData] = useState(null);\n  const {\n    usSetCheckId\n  } = useContext(AccountContext);\n\n  function HandlerButton() {\n    const email = formElem.email.value;\n    const password = formElem.password.value;\n    const firstName = formElem.firstName.value;\n    const lastName = formElem.lastName.value;\n    setInputData({\n      email,\n      password,\n      firstName,\n      lastName,\n      id: Math.random() * 11111111\n    });\n  }\n\n  console.log(\"fromPage: \", fromPage);\n  useEffect(() => {\n    let alike = false;\n    fetch(\"http://localhost:3000/userCard\").then(data => data.json()).then(data => setUsers(data)).then(data => {\n      const arrL = users.filter(item => item.email == inputData.email);\n      console.log(arrL);\n\n      if (arrL.length > 0) {\n        alike = true;\n      }\n    }).then(data => {\n      if (alike) {\n        alert(\"Такой Email Уже Зарегестрирован\");\n      }\n    }).then(data => {\n      if (inputData.email.length != 0 && alike != true) {\n        fetchPOST();\n      }\n    });\n\n    if (inputData) {} else {\n      alert(\"вы Не ввели данные EMAIL\");\n    }\n  }, [inputData]);\n\n  function fetchPOST() {\n    fetch(\"http://localhost:3000/userCard\", {\n      method: \"POST\",\n      body: JSON.stringify(inputData),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(data => data.json()).then(usSetCheckId(false)).then(singIn(inputData, NavigateTo)); //.then(ClearInput)\n  }\n\n  const NavigateTo = () => navigate(fromPage, {\n    replace: true\n  });\n\n  function ClearInput() {\n    formElem.email.value = '';\n    formElem.password.value = '';\n    formElem.firstName.value = '';\n    formElem.lastName.value = '';\n    setInputData(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      class: \"reg__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"email\",\n        children: \"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0441 \\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"reg__input\",\n        id: \"reg__emal\",\n        name: \"email\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"firstName\",\n        children: \"\\u0418\\u043C\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"reg__input\",\n        id: \"reg__f-name\",\n        name: \"firstName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"lastName\",\n        children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"reg__input\",\n        id: \"reg__l-name\",\n        name: \"lastName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"pass\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"reg__input\",\n        id: \"reg__pass\",\n        name: \"password\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: HandlerButton,\n        class: \"reg__btn\",\n        type: \"button\",\n        children: \"\\u0437\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormPost, \"19Vet0fRbdGIyKNUPgM2iZq/oA0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FormPost;\nexport default FormPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPost\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/Registration/FormPost.jsx"],"names":["React","useState","useEffect","useContext","useRef","useNavigate","AccountContext","AuthContext","FormPost","singIn","fromPage","navigate","form","formElem","current","users","setUsers","inputData","setInputData","usSetCheckId","HandlerButton","email","value","password","firstName","lastName","id","Math","random","console","log","alike","fetch","then","data","json","arrL","filter","item","length","alert","fetchPOST","method","body","JSON","stringify","headers","NavigateTo","replace","ClearInput"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useRef } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\nimport { AuthContext } from \"../Context/AuthProvider\";\r\nfunction FormPost() {\r\n   const { singIn, fromPage } = useContext(AuthContext)\r\n   const navigate = useNavigate()\r\n   const form = useRef()\r\n   const formElem = form.current\r\n   const [users, setUsers] = useState('')\r\n   const [inputData, setInputData] = useState(null)\r\n   const { usSetCheckId } = useContext(AccountContext)\r\n\r\n   function HandlerButton() {\r\n      const email = formElem.email.value\r\n      const password = formElem.password.value\r\n      const firstName = formElem.firstName.value\r\n      const lastName = formElem.lastName.value\r\n\r\n      setInputData({\r\n         email,\r\n         password,\r\n         firstName,\r\n         lastName,\r\n         id: Math.random() * 11111111\r\n      })\r\n\r\n   }\r\n\r\n   console.log(\"fromPage: \", fromPage);\r\n\r\n   useEffect(() => {\r\n      let alike = false\r\n      fetch(\"http://localhost:3000/userCard\")\r\n         .then(data => data.json())\r\n         .then(data => setUsers(data))\r\n         .then(data => {\r\n            const arrL = users.filter((item) => item.email == inputData.email)\r\n            console.log(arrL);\r\n            if (arrL.length > 0) {\r\n               alike = true\r\n            }\r\n         })\r\n         .then(data => {\r\n            if (alike) {\r\n               alert(\"Такой Email Уже Зарегестрирован\")\r\n            }\r\n         })\r\n         .then(data => {\r\n            if (inputData.email.length != 0 && alike != true) {\r\n               fetchPOST()\r\n            }\r\n         })\r\n\r\n\r\n      if (inputData) {\r\n\r\n      }\r\n      else {\r\n         alert(\"вы Не ввели данные EMAIL\")\r\n      }\r\n\r\n\r\n   }, [inputData])\r\n\r\n   function fetchPOST() {\r\n      fetch(\"http://localhost:3000/userCard\", {\r\n         method: \"POST\",\r\n         body: JSON.stringify(inputData),\r\n         headers: {\r\n            \"Content-type\": \"application/json\"\r\n         }\r\n\r\n      })\r\n         .then(data => data.json())\r\n         .then(usSetCheckId(false))\r\n         .then(singIn(inputData, NavigateTo))\r\n      //.then(ClearInput)\r\n\r\n   }\r\n\r\n   const NavigateTo = () => navigate(fromPage, { replace: true })\r\n\r\n\r\n   function ClearInput() {\r\n      formElem.email.value = ''\r\n      formElem.password.value = ''\r\n      formElem.firstName.value = ''\r\n      formElem.lastName.value = ''\r\n      setInputData(null)\r\n   }\r\n\r\n\r\n\r\n   return (\r\n      <>\r\n         <form ref={form} class=\"reg__form\">\r\n            <label class=\"reg__label\" for=\"email\">Адресс Электронной почты:</label>\r\n            <input class=\"reg__input\" id=\"reg__emal\" name=\"email\" type=\"text\" />\r\n            <label class=\"reg__label\" for=\"firstName\">Имя:</label>\r\n            <input class=\"reg__input\" id=\"reg__f-name\" name=\"firstName\" type=\"text\" />\r\n            <label class=\"reg__label\" for=\"lastName\">Фамилия:</label>\r\n            <input class=\"reg__input\" id=\"reg__l-name\" name=\"lastName\" type=\"text\" />\r\n            <label class=\"reg__label\" for=\"pass\">Пароль:</label>\r\n            <input class=\"reg__input\" id=\"reg__pass\" name=\"password\" type=\"text\" />\r\n            <button onClick={HandlerButton} class=\"reg__btn\" type=\"button\" >зарегестрироваться </button>\r\n         </form>\r\n      </>\r\n   )\r\n}\r\nexport default FormPost"]},"metadata":{},"sourceType":"module"}