{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\Account\\\\AccountInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useContext, useRef } from 'react';\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { SelectReact, ParamsForm } from '../UI/Form/Form';\nimport { ErrorsMessage } from \"../UI/Form/ErrorsMessage\";\nimport { GetAxios, PatchAxios, PutAxios } from \"../../Fetch/Fetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AccountInfo() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [FName, setFName] = useState();\n  const [LName, setLName] = useState();\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState(user.email);\n  const [country, setCountry] = useState();\n  const [city, setCity] = useState();\n  const [street, setStreet] = useState();\n  const [house, setHouse] = useState();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    control,\n    defaultValues,\n    setValue\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  async function handlerSubmit(data) {\n    const users = await GetAxios('userCard');\n\n    for (var i = 0; i < users.length; i++) {\n      console.log(users[i]);\n      console.log(data);\n\n      if (users[i].id == user.id) {\n        data.id = \"222\";\n        const num = i + 2;\n        const patch = await fetch(`http://localhost:3000/userCard/3`, {\n          method: \"PUT\",\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n        console.log(patch);\n      }\n    }\n  }\n\n  function valueDefault(regist) {\n    if (regist[0] == \"address\") {\n      return user[`${regist[0]}`][`${regist[1]}`];\n    }\n\n    return user[`${regist}`];\n  }\n\n  const formInputs = [{\n    title: \"Адресс Электронной почты\",\n    regist: \"email\"\n  }, {\n    title: \"Имя\",\n    regist: \"firstName\"\n  }, {\n    title: \"Фамилия\",\n    regist: \"lastName\"\n  }, {\n    title: \"Пароль\",\n    regist: \"password\"\n  }, {\n    title: \"Страна\",\n    regist: \"address.country\",\n    registArray: ['address', 'country']\n  }, {\n    title: \"Город\",\n    regist: \"address.city\",\n    registArray: ['address', 'city']\n  }, {\n    title: \"Улица\",\n    regist: \"address.street\",\n    registArray: ['address', 'street']\n  }, {\n    title: \"Дом\",\n    regist: \"address.house\",\n    registArray: [\"address\", \"house\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"cab__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cab__info-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/page-icon/resume.png\",\n        alt: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cab__info-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041C\\u041E\\u042F \\u0418\\u041D\\u0424\\u041E\\u0420\\u041C\\u0410\\u0426\\u0418\\u042F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: \"\\u0412\\u044B \\u0432 \\u043B\\u044E\\u0431\\u043E\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442 \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0448\\u0443 \\u0443\\u0447\\u0435\\u0442\\u043D\\u0443\\u044E \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C \\u0438 \\u0432\\u043D\\u0435\\u0441\\u0442\\u0438 \\u043B\\u044E\\u0431\\u044B\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0432 \\u043F\\u0440\\u0438\\u0432\\u0435\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0438\\u0436\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cab__info-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handlerSubmit),\n        class: \"reg__form\",\n        id: \"cab__info-form\",\n        action: \"\",\n        children: [formInputs.map(item => {\n          let registQuery = '';\n          let checkInput = true;\n          let defValue = '';\n\n          if (item.registArray) {\n            registQuery = item.registArray;\n            if (item.registArray[1] == \"country\") checkInput = false;\n          } else if (!item.registArray) {\n            registQuery = item.regist;\n          }\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", checkInput ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"reg__label\",\n              children: [item.title, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                defaultValue: valueDefault(registQuery),\n                type: \"text\",\n                className: \"reg__input\",\n                ...register(item.regist, ParamsForm(item.regist))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(ErrorsMessage, {\n                errors: errors,\n                regist: registQuery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"reg__label\",\n              children: [\" \", item.title, \":\", /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: item.regist,\n                rules: ParamsForm(item.regist),\n                render: _ref => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(SelectReact, {\n                    onChange: onChange,\n                    value: value,\n                    error: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 34\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__btn\",\n          id: \"cab__btn\",\n          type: \"submit\",\n          value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AccountInfo, \"/GuN3CNiLGjd0/SmSj2scb/HSFw=\", false, function () {\n  return [useForm];\n});\n\n_c = AccountInfo;\nexport default AccountInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInfo\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/Account/AccountInfo.jsx"],"names":["React","useEffect","useState","useContext","useRef","AuthContext","useForm","Controller","SelectReact","ParamsForm","ErrorsMessage","GetAxios","PatchAxios","PutAxios","AccountInfo","user","FName","setFName","LName","setLName","password","setPassword","email","setEmail","country","setCountry","city","setCity","street","setStreet","house","setHouse","register","formState","errors","handleSubmit","reset","control","defaultValues","setValue","mode","handlerSubmit","data","users","i","length","console","log","id","num","patch","fetch","method","body","JSON","stringify","headers","valueDefault","regist","formInputs","title","registArray","map","item","registQuery","checkInput","defValue","field","onChange","value","fieldState","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useContext, useRef } from 'react'\r\nimport { AuthContext } from \"../../Context/AuthProvider\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { SelectReact, ParamsForm } from '../UI/Form/Form'\r\nimport { ErrorsMessage } from \"../UI/Form/ErrorsMessage\";\r\nimport { GetAxios, PatchAxios, PutAxios } from \"../../Fetch/Fetching\"\r\n\r\n\r\n\r\nfunction AccountInfo() {\r\n   const { user } = useContext(AuthContext)\r\n   const [FName, setFName] = useState()\r\n   const [LName, setLName] = useState()\r\n   const [password, setPassword] = useState()\r\n   const [email, setEmail] = useState(user.email)\r\n   const [country, setCountry] = useState()\r\n   const [city, setCity] = useState()\r\n   const [street, setStreet] = useState()\r\n   const [house, setHouse] = useState()\r\n   const {\r\n      register,\r\n      formState: { errors },\r\n      handleSubmit,\r\n      reset,\r\n      control,\r\n      defaultValues,\r\n      setValue\r\n   } = useForm({\r\n      mode: \"onChange\"\r\n   })\r\n\r\n   async function handlerSubmit(data) {\r\n      const users = await GetAxios('userCard')\r\n      for (var i = 0; i < users.length; i++) {\r\n         console.log(users[i]);\r\n         console.log(data);\r\n         if (users[i].id == user.id) {\r\n            data.id = \"222\"\r\n            const num = i + 2\r\n            const patch = await fetch(`http://localhost:3000/userCard/3`, { method: \"PUT\", body: JSON.stringify(data), headers: { \"Content-type\": \"application/json\" } })\r\n            console.log(patch);\r\n         }\r\n      }\r\n   }\r\n   function valueDefault(regist) {\r\n      if (regist[0] == \"address\") {\r\n         return user[`${regist[0]}`][`${regist[1]}`]\r\n      }\r\n\r\n      return user[`${regist}`]\r\n   }\r\n\r\n   const formInputs = [\r\n      {\r\n         title: \"Адресс Электронной почты\",\r\n         regist: \"email\"\r\n      },\r\n      {\r\n         title: \"Имя\",\r\n         regist: \"firstName\",\r\n      },\r\n      {\r\n         title: \"Фамилия\",\r\n         regist: \"lastName\",\r\n      },\r\n      {\r\n         title: \"Пароль\",\r\n         regist: \"password\",\r\n      },\r\n      {\r\n         title: \"Страна\",\r\n         regist: \"address.country\",\r\n         registArray: ['address', 'country']\r\n      },\r\n      {\r\n         title: \"Город\",\r\n         regist: \"address.city\",\r\n         registArray: ['address', 'city']\r\n      },\r\n      {\r\n         title: \"Улица\",\r\n         regist: \"address.street\",\r\n         registArray: ['address', 'street']\r\n      },\r\n      {\r\n         title: \"Дом\",\r\n         regist: \"address.house\",\r\n         registArray: [\"address\", \"house\"]\r\n      }\r\n   ]\r\n\r\n\r\n   return (\r\n      <div class=\"cab__info\">\r\n         <div class=\"cab__info-icon\">\r\n            <img src=\"/img/page-icon/resume.png\" alt=\"info\" />\r\n         </div>\r\n         <div class=\"cab__info-title\">\r\n            <h1>МОЯ ИНФОРМАЦИЯ</h1>\r\n            <aside>Вы в любой момент можете обновить вашу учетную запись и внести любые изменения в\r\n               приведенные ниже данные.</aside>\r\n         </div>\r\n         <div class=\"cab__info-form\">\r\n            <form onSubmit={handleSubmit(handlerSubmit)} class=\"reg__form\" id=\"cab__info-form\" action=\"\">\r\n               {formInputs.map((item) => {\r\n                  let registQuery = ''\r\n                  let checkInput = true\r\n                  let defValue = ''\r\n                  if (item.registArray) {\r\n                     registQuery = item.registArray\r\n                     if (item.registArray[1] == \"country\") checkInput = false\r\n                  }\r\n                  else if (!item.registArray) {\r\n                     registQuery = item.regist\r\n                  }\r\n                  return (\r\n                     <> {checkInput ?\r\n                        <label className=\"reg__label\">{item.title}:\r\n                           <input defaultValue={valueDefault(registQuery)} type=\"text\" className=\"reg__input\"\r\n                              {...register(item.regist, ParamsForm(item.regist))} />\r\n                           <ErrorsMessage errors={errors} regist={registQuery} />\r\n                        </label>\r\n                        :\r\n                        <label className=\"reg__label\"> {item.title}:\r\n                           <Controller control={control} name={item.regist} rules={ParamsForm(item.regist)}\r\n                              render={({ field: { onChange, value }, fieldState: { error } }) =>\r\n                                 <SelectReact onChange={onChange} value={value} error={error} />\r\n                              } />\r\n                        </label>\r\n                     }\r\n                     </>\r\n                  )\r\n               })}\r\n               <input class=\"reg__btn\" id=\"cab__btn\" type=\"submit\" value=\"Сохранить Изменения\" />\r\n            </form>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport default AccountInfo"]},"metadata":{},"sourceType":"module"}