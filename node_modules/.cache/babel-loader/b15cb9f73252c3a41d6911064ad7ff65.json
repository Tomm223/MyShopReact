{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport const GetAxios = async url => {\n  const response = await axios.get(`http://localhost:3000/${url}`);\n  return response.data;\n};\n_c = GetAxios;\nexport const PostAxios = async (url, body) => {\n  const response = await axios.post(`http://localhost:3000/${url}`, body);\n  return response.data;\n};\n_c2 = PostAxios;\nexport const PatchAxios = async (url, body) => {\n  const response = await axios.patch(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c3 = PatchAxios;\nexport const PutAxios = async (url, body) => {\n  const response = await axios.put(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c4 = PutAxios;\nexport const bodyCheck = (key, body) => {\n  if (key == 'basket') {\n    return {\n      basket: body\n    };\n  } else if (key == 'likes') {\n    return {\n      likes: body\n    };\n  } else if (key == 'order') {\n    return {\n      order: body\n    };\n  }\n};\nexport async function ItemChange(userID, basLikOrd, delProductID) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respID = await response[0].id;\n  const respChange = await response[0][`${basLikOrd}`]; // если Change если user то response[0]\n\n  const filterChange = respChange.filter(item => item.id != delProductID); // если удалить выбераем конкретный обьект в массиве\n\n  console.log(filterChange);\n  const body = bodyCheck(basLikOrd, filterChange); //+/ ключи нужно проверять перебором if другого способа не вижу\n\n  const responsePATCH = await PatchAxios(`UserChange/${respID}`, body); // обычный PATCH просто меняеться BODY\n\n  console.log(responsePATCH);\n}\n_c5 = ItemChange;\nexport async function add(userID, basLikOrd, bodyAdd) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respID = await response[0].id;\n  const respChange = await response[0][`${basLikOrd}`];\n  const responsePATCH = await PatchAxios(`UserChange/${respID}`, body); // обычный PATCH просто меняеться BODY\n\n  console.log(responsePATCH);\n}\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetAxios\");\n$RefreshReg$(_c2, \"PostAxios\");\n$RefreshReg$(_c3, \"PatchAxios\");\n$RefreshReg$(_c4, \"PutAxios\");\n$RefreshReg$(_c5, \"ItemChange\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/Fetch/Fetching.jsx"],"names":["React","axios","GetAxios","url","response","get","data","PostAxios","body","post","PatchAxios","patch","PutAxios","put","bodyCheck","key","basket","likes","order","ItemChange","userID","basLikOrd","delProductID","respID","id","respChange","filterChange","filter","item","console","log","responsePATCH","add","bodyAdd"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\"\r\nexport const GetAxios = async (url) => {\r\n   const response = await axios.get(`http://localhost:3000/${url}`)\r\n   return response.data\r\n}\r\n\r\nexport const PostAxios = async (url, body) => {\r\n   const response = await axios.post(`http://localhost:3000/${url}`, body)\r\n   return response.data\r\n}\r\nexport const PatchAxios = async (url, body) => {\r\n   const response = await axios.patch(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const PutAxios = async (url, body) => {\r\n   const response = await axios.put(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const bodyCheck = (key, body) => {\r\n   if (key == 'basket') {\r\n      return {\r\n         basket: body\r\n      }\r\n   }\r\n   else if (key == 'likes') {\r\n      return {\r\n         likes: body\r\n      }\r\n   }\r\n   else if (key == 'order') {\r\n      return {\r\n         order: body\r\n      }\r\n   }\r\n}\r\n\r\n\r\nexport async function ItemChange(userID, basLikOrd, delProductID) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respID = await response[0].id\r\n   const respChange = await response[0][`${basLikOrd}`] // если Change если user то response[0]\r\n   const filterChange = respChange.filter((item) => item.id != delProductID) // если удалить выбераем конкретный обьект в массиве\r\n   console.log(filterChange);\r\n   const body = bodyCheck(basLikOrd, filterChange) //+/ ключи нужно проверять перебором if другого способа не вижу\r\n   const responsePATCH = await PatchAxios(`UserChange/${respID}`, body) // обычный PATCH просто меняеться BODY\r\n   console.log(responsePATCH);\r\n}\r\n\r\nexport async function add(userID, basLikOrd, bodyAdd) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respID = await response[0].id\r\n   const respChange = await response[0][`${basLikOrd}`]\r\n   const responsePATCH = await PatchAxios(`UserChange/${respID}`, body) // обычный PATCH просто меняеться BODY\r\n   console.log(responsePATCH);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/"]},"metadata":{},"sourceType":"module"}