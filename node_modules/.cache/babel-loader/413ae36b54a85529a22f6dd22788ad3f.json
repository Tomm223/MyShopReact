{"ast":null,"code":"import React, { useContext } from \"react\";\nimport axios from \"axios\";\nexport const GetAxios = async url => {\n  const response = await axios.get(`http://localhost:3000/${url}`);\n  return response.data;\n};\n_c = GetAxios;\nexport const PostAxios = async (url, body) => {\n  const response = await axios.post(`http://localhost:3000/${url}`, body);\n  return response.data;\n};\n_c2 = PostAxios;\nexport const PatchAxios = async (url, body) => {\n  const response = await axios.patch(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c3 = PatchAxios;\nexport const PutAxios = async (url, body) => {\n  const response = await axios.put(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c4 = PutAxios;\nexport const bodyCheck = (key, body) => {\n  if (key == 'basket') {\n    return {\n      basket: body\n    };\n  } else if (key == 'likes') {\n    return {\n      likes: body\n    };\n  } else if (key == 'order') {\n    return {\n      order: body\n    };\n  }\n};\nexport const AddProduct = async (userID, basLikOrd, bodyItem) => {\n  const {\n    id,\n    AccArray\n  } = await AccProductGet(userID, basLikOrd);\n  console.log(id, AccArray);\n  await AccArray.push(bodyItem);\n  const body = bodyCheck(basLikOrd, AccArray);\n  console.log(body);\n  const responsePATCH = await PatchAxios(`UserChange/${id}`, body);\n  console.log(responsePATCH); // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\n};\n_c5 = AddProduct;\nexport const DeleteProduct = async (userID, basLikOrd, prodID) => {\n  const {\n    id,\n    AccArray\n  } = await AccProductGet(userID, basLikOrd);\n  const FilterArray = await AccArray.filter(item => item.id != prodID);\n  const body = bodyCheck(basLikOrd, FilterArray);\n  const responsePATCH = await PatchAxios(`UserChange/${id}`, body);\n  console.log(responsePATCH); // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\n};\n_c6 = DeleteProduct;\nexport const DeleteProductS = async (id, basLikOrd) => {\n  const body = bodyCheck(basLikOrd, []);\n  const response = await PatchAxios(`userChange/${id}`, body);\n  console.log(response);\n};\n_c7 = DeleteProductS;\nexport const ToOrder = async (userID, changeStart, changeEnd) => {\n  const {\n    id,\n    AccArray\n  } = await AccProductGet(userID, changeStart);\n  const bodyOrder = await BuildOrder(userID, AccArray);\n  console.log(AccArray);\n\n  if (bodyOrder) {\n    const {\n      id,\n      AccArray\n    } = await AccProductGet(userID, changeEnd);\n    AccArray.push(bodyOrder);\n    const responsePatch = await PatchAxios(`UserChange/${id}`);\n    console.log(responsePatch);\n    DeleteProductS(id, changeStart);\n  }\n};\n_c8 = ToOrder;\nexport const ToBasket = async (userID, changeStart, changeEnd) => {};\n_c9 = ToBasket;\nexport const BuildOrder = async (userID, arrProduct) => {\n  const user = await GetAxios(`userCard/${userID}`);\n  const products = await GetAxios('products');\n  const local = `${user.address.country.toUpperCase()}, ${user.address.city}, ${user.address.street}, ${user.address.house}`;\n  let sum = 0;\n  arrProduct.map(item => {\n    const product = products.filter(prod => prod.id == item.product_id)[0];\n    const price = product.price;\n    sum += price;\n  });\n  const body = {\n    send: \"true\",\n    local: local,\n    sum: sum,\n    products: arrProduct\n  };\n  return body;\n};\n_c10 = BuildOrder;\nexport async function AccProductGet(userID, basLikOrd) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respChange = await response[0][`${basLikOrd}`];\n  const ID = response[0].id;\n  return {\n    id: ID,\n    AccArray: respChange\n  };\n}\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/\n\n_c11 = AccProductGet;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"GetAxios\");\n$RefreshReg$(_c2, \"PostAxios\");\n$RefreshReg$(_c3, \"PatchAxios\");\n$RefreshReg$(_c4, \"PutAxios\");\n$RefreshReg$(_c5, \"AddProduct\");\n$RefreshReg$(_c6, \"DeleteProduct\");\n$RefreshReg$(_c7, \"DeleteProductS\");\n$RefreshReg$(_c8, \"ToOrder\");\n$RefreshReg$(_c9, \"ToBasket\");\n$RefreshReg$(_c10, \"BuildOrder\");\n$RefreshReg$(_c11, \"AccProductGet\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/Fetch/Fetching.jsx"],"names":["React","useContext","axios","GetAxios","url","response","get","data","PostAxios","body","post","PatchAxios","patch","PutAxios","put","bodyCheck","key","basket","likes","order","AddProduct","userID","basLikOrd","bodyItem","id","AccArray","AccProductGet","console","log","push","responsePATCH","DeleteProduct","prodID","FilterArray","filter","item","DeleteProductS","ToOrder","changeStart","changeEnd","bodyOrder","BuildOrder","responsePatch","ToBasket","arrProduct","user","products","local","address","country","toUpperCase","city","street","house","sum","map","product","prod","product_id","price","send","respChange","ID"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport axios from \"axios\"\r\n\r\nexport const GetAxios = async (url) => {\r\n   const response = await axios.get(`http://localhost:3000/${url}`)\r\n   return response.data\r\n}\r\n\r\nexport const PostAxios = async (url, body) => {\r\n   const response = await axios.post(`http://localhost:3000/${url}`, body)\r\n   return response.data\r\n}\r\nexport const PatchAxios = async (url, body) => {\r\n   const response = await axios.patch(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const PutAxios = async (url, body) => {\r\n   const response = await axios.put(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const bodyCheck = (key, body) => {\r\n   if (key == 'basket') {\r\n      return {\r\n         basket: body\r\n      }\r\n   }\r\n   else if (key == 'likes') {\r\n      return {\r\n         likes: body\r\n      }\r\n   }\r\n   else if (key == 'order') {\r\n      return {\r\n         order: body\r\n      }\r\n   }\r\n}\r\n\r\nexport const AddProduct = async (userID, basLikOrd, bodyItem) => {\r\n   const { id, AccArray } = await AccProductGet(userID, basLikOrd)\r\n   console.log(id, AccArray);\r\n   await AccArray.push(bodyItem)\r\n   const body = bodyCheck(basLikOrd, AccArray)\r\n   console.log(body);\r\n   const responsePATCH = await PatchAxios(`UserChange/${id}`, body)\r\n   console.log(responsePATCH);\r\n   // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\r\n}\r\nexport const DeleteProduct = async (userID, basLikOrd, prodID) => {\r\n   const { id, AccArray } = await AccProductGet(userID, basLikOrd)\r\n   const FilterArray = await AccArray.filter((item) => item.id != prodID)\r\n   const body = bodyCheck(basLikOrd, FilterArray)\r\n   const responsePATCH = await PatchAxios(`UserChange/${id}`, body)\r\n   console.log(responsePATCH);\r\n   // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\r\n}\r\nexport const DeleteProductS = async (id, basLikOrd) => {\r\n   const body = bodyCheck(basLikOrd, [])\r\n   const response = await PatchAxios(`userChange/${id}`, body)\r\n   console.log(response);\r\n}\r\n\r\nexport const ToOrder = async (userID, changeStart, changeEnd) => {\r\n   const { id, AccArray } = await AccProductGet(userID, changeStart)\r\n   const bodyOrder = await BuildOrder(userID, AccArray)\r\n   console.log(AccArray);\r\n   if (bodyOrder) {\r\n      const { id, AccArray } = await AccProductGet(userID, changeEnd)\r\n      AccArray.push(bodyOrder)\r\n      const responsePatch = await PatchAxios(`UserChange/${id}`,)\r\n      console.log(responsePatch)\r\n      DeleteProductS(id, changeStart)\r\n   }\r\n\r\n\r\n}\r\nexport const ToBasket = async (userID, changeStart, changeEnd) => {\r\n\r\n}\r\nexport const BuildOrder = async (userID, arrProduct) => {\r\n   const user = await GetAxios(`userCard/${userID}`)\r\n   const products = await GetAxios('products')\r\n   const local = `${user.address.country.toUpperCase()}, ${user.address.city}, ${user.address.street}, ${user.address.house}`\r\n   let sum = 0\r\n   arrProduct.map((item) => {\r\n      const product = products.filter((prod) => prod.id == item.product_id)[0]\r\n      const price = product.price\r\n      sum += price\r\n   })\r\n   const body = {\r\n      send: \"true\",\r\n      local: local,\r\n      sum: sum,\r\n      products: arrProduct\r\n   }\r\n   return body\r\n}\r\n\r\nexport async function AccProductGet(userID, basLikOrd) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respChange = await response[0][`${basLikOrd}`]\r\n   const ID = response[0].id\r\n   return {\r\n      id: ID,\r\n      AccArray: respChange\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/"]},"metadata":{},"sourceType":"module"}