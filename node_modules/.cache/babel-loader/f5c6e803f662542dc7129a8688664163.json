{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport const GetAxios = async url => {\n  const response = await axios.get(`http://localhost:3000/${url}`);\n  return response.data;\n};\n_c = GetAxios;\nexport const PostAxios = async (url, body) => {\n  const response = await axios.post(`http://localhost:3000/${url}`, body);\n  return response.data;\n};\n_c2 = PostAxios;\nexport const PatchAxios = async (url, body) => {\n  const response = await axios.patch(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c3 = PatchAxios;\nexport const PutAxios = async (url, body) => {\n  const response = await axios.put(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c4 = PutAxios;\nexport const bodyCheck = async (key, body) => {\n  if (key == 'basket') {\n    return {\n      basket: body\n    };\n  } else if (key == 'likes') {\n    return {\n      likes: body\n    };\n  } else if (key == 'order') {\n    return {\n      order: body\n    };\n  }\n};\nexport const AddProduct = async (userID, basLikOrd, bodyItem) => {\n  const {\n    id,\n    AccArray\n  } = await AccProductGet(userID, basLikOrd);\n  await AccArray.push(bodyItem);\n  const body = await bodyCheck(basLikOrd, respChange);\n  const responsePATCH = await PatchAxios(`UserChange/${id}`, body);\n  console.log(responsePATCH); // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\n};\n_c5 = AddProduct;\nexport const DeleteProduct = async (userID, basLikOrd, prodID) => {\n  const {\n    id,\n    AccArray\n  } = await AccProductGet(userID, basLikOrd);\n  const FilterArray = await AccArray.filter(item => item.id != prodID);\n  const body = await bodyCheck(basLikOrd, FilterArray);\n  const responsePATCH = await PatchAxios(`UserChange/${id}`, body);\n  console.log(responsePATCH); // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\n};\n_c6 = DeleteProduct;\nexport const DeleteProductS = async (id, basLikOrd) => {\n  const body = bodyCheck(basLikOrd, []);\n  const response = await PatchAxios(`userChange/${id}`, body);\n  console.log(response);\n};\n_c7 = DeleteProductS;\nexport const BuildOrder = arr => {\n  const userArr = get;\n};\n_c8 = BuildOrder;\nexport const UpProduct = async (userID, changeStart, changeEnd) => {\n  const {\n    id,\n    AccArray\n  } = await AccProductGet(userID, changeStart);\n  DeleteProductS(id, changeStart);\n  const bodyOrder = await BuildOrder(AccArray);\n  const responsePatch = await PatchAxios(`UserChange/${id}`);\n};\n_c9 = UpProduct;\nexport async function AccProductGet(userID, basLikOrd) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respChange = await response[0][`${basLikOrd}`];\n  const ID = response.id;\n  return {\n    id: ID,\n    AccArray: respChange\n  };\n}\n_c10 = AccProductGet;\nexport async function add(userID, basLikOrd, bodyAdd) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respChange = await response[0][`${basLikOrd}`]; // check == \"add\"? await respChange.push(bodyAdd) : const filterChange = respChange.filter((item) => item.id != delProductID)\n\n  const body = await bodyCheck(basLikOrd, respChange);\n  const responsePATCH = await PatchAxios(`UserChange/${response[0].id}`, body); // обычный PATCH просто меняеться BODY\n\n  console.log(responsePATCH);\n}\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"GetAxios\");\n$RefreshReg$(_c2, \"PostAxios\");\n$RefreshReg$(_c3, \"PatchAxios\");\n$RefreshReg$(_c4, \"PutAxios\");\n$RefreshReg$(_c5, \"AddProduct\");\n$RefreshReg$(_c6, \"DeleteProduct\");\n$RefreshReg$(_c7, \"DeleteProductS\");\n$RefreshReg$(_c8, \"BuildOrder\");\n$RefreshReg$(_c9, \"UpProduct\");\n$RefreshReg$(_c10, \"AccProductGet\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/Fetch/Fetching.jsx"],"names":["React","axios","GetAxios","url","response","get","data","PostAxios","body","post","PatchAxios","patch","PutAxios","put","bodyCheck","key","basket","likes","order","AddProduct","userID","basLikOrd","bodyItem","id","AccArray","AccProductGet","push","respChange","responsePATCH","console","log","DeleteProduct","prodID","FilterArray","filter","item","DeleteProductS","BuildOrder","arr","userArr","UpProduct","changeStart","changeEnd","bodyOrder","responsePatch","ID","add","bodyAdd"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\"\r\nexport const GetAxios = async (url) => {\r\n   const response = await axios.get(`http://localhost:3000/${url}`)\r\n   return response.data\r\n}\r\n\r\nexport const PostAxios = async (url, body) => {\r\n   const response = await axios.post(`http://localhost:3000/${url}`, body)\r\n   return response.data\r\n}\r\nexport const PatchAxios = async (url, body) => {\r\n   const response = await axios.patch(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const PutAxios = async (url, body) => {\r\n   const response = await axios.put(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const bodyCheck = async (key, body) => {\r\n   if (key == 'basket') {\r\n      return {\r\n         basket: body\r\n      }\r\n   }\r\n   else if (key == 'likes') {\r\n      return {\r\n         likes: body\r\n      }\r\n   }\r\n   else if (key == 'order') {\r\n      return {\r\n         order: body\r\n      }\r\n   }\r\n}\r\n\r\nexport const AddProduct = async (userID, basLikOrd, bodyItem) => {\r\n   const { id, AccArray } = await AccProductGet(userID, basLikOrd)\r\n   await AccArray.push(bodyItem)\r\n   const body = await bodyCheck(basLikOrd, respChange)\r\n   const responsePATCH = await PatchAxios(`UserChange/${id}`, body)\r\n   console.log(responsePATCH);\r\n   // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\r\n}\r\nexport const DeleteProduct = async (userID, basLikOrd, prodID) => {\r\n   const { id, AccArray } = await AccProductGet(userID, basLikOrd)\r\n   const FilterArray = await AccArray.filter((item) => item.id != prodID)\r\n   const body = await bodyCheck(basLikOrd, FilterArray)\r\n   const responsePATCH = await PatchAxios(`UserChange/${id}`, body)\r\n   console.log(responsePATCH);\r\n   // СЮДА ПОЛОЖИТЬ ФУНКЦИЯ С ОТОБРАЖЕНИЕМ ТОГО ЧТО PRODUCTS БЫЛ ИЗМЕНЕН\r\n}\r\nexport const DeleteProductS = async (id, basLikOrd) => {\r\n   const body = bodyCheck(basLikOrd, [])\r\n   const response = await PatchAxios(`userChange/${id}`, body)\r\n   console.log(response);\r\n}\r\nexport const BuildOrder = (arr) => {\r\n   const userArr = get\r\n}\r\nexport const UpProduct = async (userID, changeStart, changeEnd) => {\r\n   const { id, AccArray } = await AccProductGet(userID, changeStart)\r\n   DeleteProductS(id, changeStart)\r\n   const bodyOrder = await BuildOrder(AccArray)\r\n   const responsePatch = await PatchAxios(`UserChange/${id}`)\r\n}\r\n\r\n\r\nexport async function AccProductGet(userID, basLikOrd) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respChange = await response[0][`${basLikOrd}`]\r\n   const ID = response.id\r\n   return {\r\n      id: ID,\r\n      AccArray: respChange\r\n   }\r\n}\r\n\r\nexport async function add(userID, basLikOrd, bodyAdd) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respChange = await response[0][`${basLikOrd}`]\r\n   // check == \"add\"? await respChange.push(bodyAdd) : const filterChange = respChange.filter((item) => item.id != delProductID)\r\n   const body = await bodyCheck(basLikOrd, respChange)\r\n   const responsePATCH = await PatchAxios(`UserChange/${response[0].id}`, body) // обычный PATCH просто меняеться BODY\r\n   console.log(responsePATCH);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/"]},"metadata":{},"sourceType":"module"}