{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\Context\\\\AccountProvider.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccountContext = /*#__PURE__*/React.createContext();\n\nfunction AccountProvider(_ref) {\n  let {\n    children\n  } = _ref;\n\n  ////////////////////// ТО КАК ПРОИСХОДИЛО ДВИЖЕНИЕ ПРОДУКТОВ ПО ACCOUNTCHANGE\n  //ACCOUNT CHANGE\n  function AddTopDelBottom(to, usSet, prodAdd, toDel, usSetDel, delProd) {\n    fetch(`http://localhost:3000/${to}`, {\n      method: \"POST\",\n      body: JSON.stringify(prodAdd),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(data => data.json()).then(PostDeleteItemChange(toDel, usSetDel, delProd)).then(ADDrenderProducts(to, usSet));\n  }\n\n  function PostDeleteItemChange(to, usSetDel, obj) {\n    // ЗАЧЕМ НА ЭТОТ IFF СУКА ЕСЛИ obj === obj мб имел ввиду obj.products? ну такто до этого работала шняга а сейчас нет \n    if (obj.length) {\n      obj.map(item => {\n        fetch(`http://localhost:3000/${to}`, {\n          method: \"POST\",\n          body: JSON.stringify(item),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(data => data.json()).then(data => console.log(data)).then(DELETErenderProducts(to, usSetDel));\n      });\n    } else {\n      fetch(`http://localhost:3000/${to}`, {\n        method: \"POST\",\n        body: JSON.stringify(obj),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(data => data.json()).then(data => console.log(data)).then(DELETErenderProducts(to, usSetDel));\n    }\n  }\n\n  async function DELETErenderProducts(to, usSet) {\n    if (checkId) {\n      await fetch(`http://localhost:3000/${to}`).then(data => data.json()).then(data => usSet(data)).then(data => console.log(to + \"===\" + data));\n    }\n  }\n\n  async function ADDrenderProducts(to, usSet) {\n    if (checkId) {\n      await fetch(`http://localhost:3000/${to}`).then(data => data.json()).then(data => usSet(data));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      DELETErenderProducts,\n      ADDrenderProducts,\n      AddTopDelBottom,\n      PostDeleteItemChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_c = AccountProvider;\nexport default AccountProvider;\n/**\r\n ///////////// СОБРАННЫЕ ДАННЫЕ И ИХ ФУНКЦИИ НА ИЗМЕНЕНИЕ\r\n\r\n const [orderPers, setOrderPers] = useState(JSON.parse(localStorage.getItem('ChangeOrder')) ? JSON.parse(localStorage.getItem('ChangeOrder')).reverse() : null)\r\n   const [basketPers, setBasketPers] = useState(JSON.parse(localStorage.getItem('ChangeBasket')) ? JSON.parse(localStorage.getItem('ChangeBasket')).reverse() : null)\r\n   const [likesPers, setLikesPers] = useState(JSON.parse(localStorage.getItem('ChangeLikes')) ? JSON.parse(localStorage.getItem('ChangeLikes')).reverse() : null)\r\n   const usSetChangeOrder = (mass) => {\r\n      //setOrderPers(prev => null)\r\n      localStorage.setItem('ChangeOrder', JSON.stringify(mass))\r\n      setOrderPers(prev => JSON.parse(localStorage.getItem('ChangeOrder')))\r\n   }\r\n   const usSetChangeBasket = (mass) => {\r\n      //setBasketPers(prev => null)\r\n      localStorage.setItem('ChangeBasket', JSON.stringify(mass))\r\n      setBasketPers(prev => JSON.parse(localStorage.getItem('ChangeBasket')))\r\n   }\r\n   const usSetChangeLikes = (mass) => {\r\n      //setLikesPers(prev => null)\r\n      localStorage.setItem('ChangeLikes', JSON.stringify(mass))\r\n      setLikesPers(prev => JSON.parse(localStorage.getItem('ChangeLikes')))\r\n   }\r\n   //delete\r\n   const [deleteLikes, setDeleteLikes] = useState(JSON.parse(localStorage.getItem('DELETELikes')))\r\n   const [deleteBasket, setDeleteBasket] = useState(JSON.parse(localStorage.getItem('DELETEBasket')))\r\n   const [deleteOrder, setDeleteOrder] = useState(JSON.parse(localStorage.getItem('DELETEOrder')))\r\n   const usSetDeleteLikes = (mass) => {\r\n      //setDeleteLikes(prev => null)\r\n      localStorage.setItem('DELETELikes', JSON.stringify(mass))\r\n      setDeleteLikes(prev => JSON.parse(localStorage.getItem('DELETELikes')))\r\n   }\r\n   const usSetDeleteBasket = (mass) => {\r\n      //setDeleteBasket(prev => null)\r\n      localStorage.setItem('DELETEBasket', JSON.stringify(mass))\r\n      setDeleteBasket(prev => JSON.parse(localStorage.getItem('DELETEBasket')))\r\n   }\r\n   const usSetDeleteOrder = (mass) => {\r\n      //setDeleteOrder(prev => null)\r\n      localStorage.setItem('DELETEOrder', JSON.stringify(mass))\r\n      setDeleteOrder(prev => JSON.parse(localStorage.getItem('DELETEOrder')))\r\n   }\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountProvider\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/Context/AccountProvider.jsx"],"names":["React","useState","AccountContext","createContext","AccountProvider","children","AddTopDelBottom","to","usSet","prodAdd","toDel","usSetDel","delProd","fetch","method","body","JSON","stringify","headers","then","data","json","PostDeleteItemChange","ADDrenderProducts","obj","length","map","item","console","log","DELETErenderProducts","checkId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const AccountContext = React.createContext()\r\n\r\nfunction AccountProvider({ children }) {\r\n\r\n   ////////////////////// ТО КАК ПРОИСХОДИЛО ДВИЖЕНИЕ ПРОДУКТОВ ПО ACCOUNTCHANGE\r\n\r\n\r\n   //ACCOUNT CHANGE\r\n   function AddTopDelBottom(to, usSet, prodAdd, toDel, usSetDel, delProd) {\r\n      fetch(`http://localhost:3000/${to}`, {\r\n         method: \"POST\",\r\n         body: JSON.stringify(prodAdd),\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n      })\r\n         .then(data => data.json())\r\n         .then(PostDeleteItemChange(toDel, usSetDel, delProd))\r\n         .then(ADDrenderProducts(to, usSet))\r\n   }\r\n   function PostDeleteItemChange(to, usSetDel, obj) {\r\n      // ЗАЧЕМ НА ЭТОТ IFF СУКА ЕСЛИ obj === obj мб имел ввиду obj.products? ну такто до этого работала шняга а сейчас нет \r\n      if (obj.length) {\r\n         obj.map((item) => {\r\n            fetch(`http://localhost:3000/${to}`, {\r\n               method: \"POST\",\r\n               body: JSON.stringify(item),\r\n               headers: {\r\n                  'Content-Type': 'application/json'\r\n               }\r\n            })\r\n               .then(data => data.json())\r\n               .then(data => console.log(data))\r\n               .then(DELETErenderProducts(to, usSetDel))\r\n         })\r\n      }\r\n      else {\r\n         fetch(`http://localhost:3000/${to}`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(obj),\r\n            headers: {\r\n               'Content-Type': 'application/json'\r\n            }\r\n         })\r\n            .then(data => data.json())\r\n            .then(data => console.log(data))\r\n            .then(DELETErenderProducts(to, usSetDel))\r\n      }\r\n\r\n   }\r\n   async function DELETErenderProducts(to, usSet) {\r\n      if (checkId) {\r\n         await fetch(`http://localhost:3000/${to}`)\r\n            .then(data => data.json())\r\n            .then(data => usSet(data))\r\n            .then(data => console.log(to + \"===\" + data))\r\n      }\r\n   }\r\n   async function ADDrenderProducts(to, usSet) {\r\n      if (checkId) {\r\n         await fetch(`http://localhost:3000/${to}`)\r\n            .then(data => data.json())\r\n            .then(data => usSet(data))\r\n      }\r\n\r\n   }\r\n   return (\r\n      <AccountContext.Provider value={{\r\n         DELETErenderProducts, ADDrenderProducts,\r\n         AddTopDelBottom, PostDeleteItemChange\r\n      }}>\r\n         {children}\r\n      </AccountContext.Provider>\r\n   )\r\n}\r\n\r\nexport default AccountProvider\r\n\r\n\r\n/**\r\n ///////////// СОБРАННЫЕ ДАННЫЕ И ИХ ФУНКЦИИ НА ИЗМЕНЕНИЕ\r\n\r\n const [orderPers, setOrderPers] = useState(JSON.parse(localStorage.getItem('ChangeOrder')) ? JSON.parse(localStorage.getItem('ChangeOrder')).reverse() : null)\r\n   const [basketPers, setBasketPers] = useState(JSON.parse(localStorage.getItem('ChangeBasket')) ? JSON.parse(localStorage.getItem('ChangeBasket')).reverse() : null)\r\n   const [likesPers, setLikesPers] = useState(JSON.parse(localStorage.getItem('ChangeLikes')) ? JSON.parse(localStorage.getItem('ChangeLikes')).reverse() : null)\r\n   const usSetChangeOrder = (mass) => {\r\n      //setOrderPers(prev => null)\r\n      localStorage.setItem('ChangeOrder', JSON.stringify(mass))\r\n      setOrderPers(prev => JSON.parse(localStorage.getItem('ChangeOrder')))\r\n   }\r\n   const usSetChangeBasket = (mass) => {\r\n      //setBasketPers(prev => null)\r\n      localStorage.setItem('ChangeBasket', JSON.stringify(mass))\r\n      setBasketPers(prev => JSON.parse(localStorage.getItem('ChangeBasket')))\r\n   }\r\n   const usSetChangeLikes = (mass) => {\r\n      //setLikesPers(prev => null)\r\n      localStorage.setItem('ChangeLikes', JSON.stringify(mass))\r\n      setLikesPers(prev => JSON.parse(localStorage.getItem('ChangeLikes')))\r\n   }\r\n   //delete\r\n   const [deleteLikes, setDeleteLikes] = useState(JSON.parse(localStorage.getItem('DELETELikes')))\r\n   const [deleteBasket, setDeleteBasket] = useState(JSON.parse(localStorage.getItem('DELETEBasket')))\r\n   const [deleteOrder, setDeleteOrder] = useState(JSON.parse(localStorage.getItem('DELETEOrder')))\r\n   const usSetDeleteLikes = (mass) => {\r\n      //setDeleteLikes(prev => null)\r\n      localStorage.setItem('DELETELikes', JSON.stringify(mass))\r\n      setDeleteLikes(prev => JSON.parse(localStorage.getItem('DELETELikes')))\r\n   }\r\n   const usSetDeleteBasket = (mass) => {\r\n      //setDeleteBasket(prev => null)\r\n      localStorage.setItem('DELETEBasket', JSON.stringify(mass))\r\n      setDeleteBasket(prev => JSON.parse(localStorage.getItem('DELETEBasket')))\r\n   }\r\n   const usSetDeleteOrder = (mass) => {\r\n      //setDeleteOrder(prev => null)\r\n      localStorage.setItem('DELETEOrder', JSON.stringify(mass))\r\n      setDeleteOrder(prev => JSON.parse(localStorage.getItem('DELETEOrder')))\r\n   }\r\n */"]},"metadata":{},"sourceType":"module"}