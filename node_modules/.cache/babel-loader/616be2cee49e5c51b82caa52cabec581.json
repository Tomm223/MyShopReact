{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport const GetAxios = async url => {\n  const response = await axios.get(`http://localhost:3000/${url}`);\n  return response.data;\n};\n_c = GetAxios;\nexport const PostAxios = async (url, body) => {\n  const response = await axios.post(`http://localhost:3000/${url}`, body);\n  return response.data;\n};\n_c2 = PostAxios;\nexport const PatchAxios = async (url, body) => {\n  const response = await axios.patch(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c3 = PatchAxios;\nexport const PutAxios = async (url, body) => {\n  const response = await axios.put(`http://localhost:3000/${url}`, body);\n  return response;\n};\n_c4 = PutAxios;\nexport const bodyCheck = async (key, body) => {\n  if (key == 'basket') {\n    return {\n      basket: body\n    };\n  } else if (key == 'likes') {\n    return {\n      likes: body\n    };\n  } else if (key == 'order') {\n    return {\n      order: body\n    };\n  }\n};\nexport async function ItemChange(check, userID, basLikOrd, delProductID) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respChange = await response[0][`${basLikOrd}`];\n\n  if (check == 'add') {\n    await respChange.push(delProductID);\n  } //: await respChange.filter((item) => item.id != delProductID) // если удалить выбераем конкретный обьект в массиве\n\n\n  console.log(respChange); //const body = await bodyCheck(basLikOrd, filterChange) //+/ ключи нужно проверять перебором if другого способа не вижу\n  //const responsePATCH = await PatchAxios(`UserChange/${response[0].id}`, body) // обычный PATCH просто меняеться BODY\n  //console.log(responsePATCH);\n}\n_c5 = ItemChange;\nexport async function add(userID, basLikOrd, bodyAdd) {\n  const response = await GetAxios(`UserChange?user_id=${userID}`); //get\n\n  const respChange = await response[0][`${basLikOrd}`]; // check == \"add\"? await respChange.push(bodyAdd) : const filterChange = respChange.filter((item) => item.id != delProductID)\n\n  const body = await bodyCheck(basLikOrd, respChange);\n  const responsePATCH = await PatchAxios(`UserChange/${response[0].id}`, body); // обычный PATCH просто меняеться BODY\n\n  console.log(responsePATCH);\n}\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetAxios\");\n$RefreshReg$(_c2, \"PostAxios\");\n$RefreshReg$(_c3, \"PatchAxios\");\n$RefreshReg$(_c4, \"PutAxios\");\n$RefreshReg$(_c5, \"ItemChange\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/Fetch/Fetching.jsx"],"names":["React","axios","GetAxios","url","response","get","data","PostAxios","body","post","PatchAxios","patch","PutAxios","put","bodyCheck","key","basket","likes","order","ItemChange","check","userID","basLikOrd","delProductID","respChange","push","console","log","add","bodyAdd","responsePATCH","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\"\r\nexport const GetAxios = async (url) => {\r\n   const response = await axios.get(`http://localhost:3000/${url}`)\r\n   return response.data\r\n}\r\n\r\nexport const PostAxios = async (url, body) => {\r\n   const response = await axios.post(`http://localhost:3000/${url}`, body)\r\n   return response.data\r\n}\r\nexport const PatchAxios = async (url, body) => {\r\n   const response = await axios.patch(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const PutAxios = async (url, body) => {\r\n   const response = await axios.put(`http://localhost:3000/${url}`, body)\r\n   return response\r\n}\r\nexport const bodyCheck = async (key, body) => {\r\n   if (key == 'basket') {\r\n      return {\r\n         basket: body\r\n      }\r\n   }\r\n   else if (key == 'likes') {\r\n      return {\r\n         likes: body\r\n      }\r\n   }\r\n   else if (key == 'order') {\r\n      return {\r\n         order: body\r\n      }\r\n   }\r\n}\r\n\r\n\r\nexport async function ItemChange(check, userID, basLikOrd, delProductID) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respChange = await response[0][`${basLikOrd}`]\r\n   if (check == 'add') {\r\n      await respChange.push(delProductID)\r\n   }\r\n   //: await respChange.filter((item) => item.id != delProductID) // если удалить выбераем конкретный обьект в массиве\r\n   console.log(respChange);\r\n   //const body = await bodyCheck(basLikOrd, filterChange) //+/ ключи нужно проверять перебором if другого способа не вижу\r\n   //const responsePATCH = await PatchAxios(`UserChange/${response[0].id}`, body) // обычный PATCH просто меняеться BODY\r\n   //console.log(responsePATCH);\r\n}\r\n\r\nexport async function add(userID, basLikOrd, bodyAdd) {\r\n   const response = await GetAxios(`UserChange?user_id=${userID}`) //get\r\n   const respChange = await response[0][`${basLikOrd}`]\r\n   // check == \"add\"? await respChange.push(bodyAdd) : const filterChange = respChange.filter((item) => item.id != delProductID)\r\n   const body = await bodyCheck(basLikOrd, respChange)\r\n   const responsePATCH = await PatchAxios(`UserChange/${response[0].id}`, body) // обычный PATCH просто меняеться BODY\r\n   console.log(responsePATCH);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n#See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n\r\n# testing\r\n/coverage\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n.env.local\r\n.env.development.local\r\n.env.test.local   \r\n.env.production.local\r\n\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n# \r\n\r\n*/"]},"metadata":{},"sourceType":"module"}