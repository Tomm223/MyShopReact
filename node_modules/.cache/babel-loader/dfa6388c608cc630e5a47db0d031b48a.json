{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\UI\\\\Form\\\\Form.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputErr = str => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0432 \\u043F\\u043E\\u043B\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n    children: str\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 44\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 27\n}, this);\n\nconst inputNull = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"\\u041F\\u043E\\u043B\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043A \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044E\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 25\n}, this);\n\nconst EmailError = () => alert('Email-адресс уже зарегестрирован');\n\n_c = EmailError;\nconst options = [{\n  value: \"russia\",\n  label: \"Россия\"\n}, {\n  value: \"USA\",\n  label: \"США\"\n}, {\n  value: \"beloruss\",\n  label: \"Белорусь\"\n}, {\n  value: \"chehia\",\n  label: \"Чехия\"\n}];\nconst paramsHook = {\n  required: \"Поле обязательно к заполнению\",\n  minLength: {\n    value: 3,\n    message: \"Минимум 3 символов\"\n  }\n};\nconst paramEmal = {\n  required: \"Поле обязательно к заполнению\",\n  pattern: {\n    value: /^((([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я\\.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/u,\n    message: \"Пожалуйста введите валидный email\"\n  }\n};\n\nfunction FormInput(_ref) {\n  var _errors, _errors2, _errors2$;\n\n  let {\n    title,\n    regist\n  } = _ref;\n  let param = paramsHook;\n\n  if (regist == \"email\") {\n    param = paramEmal;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    class: \"reg__label\",\n    for: regist,\n    children: [title, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n      class: \"reg__input\",\n      ...register(`${regist}`, param),\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg__error\",\n      children: [\" \", ((_errors = errors) === null || _errors === void 0 ? void 0 : _errors[`${regist}`]) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ((_errors2 = errors) === null || _errors2 === void 0 ? void 0 : (_errors2$ = _errors2[`${regist}`]) === null || _errors2$ === void 0 ? void 0 : _errors2$.message) || inputErr(`${regist}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 65\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = FormInput;\nexport default FormInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmailError\");\n$RefreshReg$(_c2, \"FormInput\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/UI/Form/Form.jsx"],"names":["React","inputErr","str","inputNull","EmailError","alert","options","value","label","paramsHook","required","minLength","message","paramEmal","pattern","FormInput","title","regist","param","register","errors"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,QAAQ,GAAIC,GAAD,iBAAS;AAAA,mGAAiB;AAAA,cAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;;AACA,MAAMC,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;AACA,MAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA9B;;KAAMD,U;AAGN,MAAME,OAAO,GAAG,CACb;AACGC,EAAAA,KAAK,EAAE,QADV;AAEGC,EAAAA,KAAK,EAAE;AAFV,CADa,EAKb;AACGD,EAAAA,KAAK,EAAE,KADV;AAEGC,EAAAA,KAAK,EAAE;AAFV,CALa,EASb;AACGD,EAAAA,KAAK,EAAE,UADV;AAEGC,EAAAA,KAAK,EAAE;AAFV,CATa,EAab;AACGD,EAAAA,KAAK,EAAE,QADV;AAEGC,EAAAA,KAAK,EAAE;AAFV,CAba,CAAhB;AAmBA,MAAMC,UAAU,GAAG;AAChBC,EAAAA,QAAQ,EAAE,+BADM;AAEhBC,EAAAA,SAAS,EAAE;AACRJ,IAAAA,KAAK,EAAE,CADC;AAERK,IAAAA,OAAO,EAAE;AAFD;AAFK,CAAnB;AAOA,MAAMC,SAAS,GAAG;AACfH,EAAAA,QAAQ,EAAE,+BADK;AAEfI,EAAAA,OAAO,EAAE;AACNP,IAAAA,KAAK,EAAE,wIADD;AAENK,IAAAA,OAAO,EAAE;AAFH;AAFM,CAAlB;;AAOA,SAASG,SAAT,OAAsC;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAmB;AACnC,MAAIC,KAAK,GAAGT,UAAZ;;AACA,MAAIQ,MAAM,IAAI,OAAd,EAAuB;AACpBC,IAAAA,KAAK,GAAGL,SAAR;AACF;;AACD,sBACG;AAAO,IAAA,KAAK,EAAC,YAAb;AAA0B,IAAA,GAAG,EAAEI,MAA/B;AAAA,eAAwCD,KAAxC,oBACG;AAAO,MAAA,KAAK,EAAC,YAAb;AAAA,SAA8BG,QAAQ,CAAE,GAAEF,MAAO,EAAX,EAAcC,KAAd,CAAtC;AAA4D,MAAA,IAAI,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,sBAA8B,YAAAE,MAAM,UAAN,0CAAU,GAAEH,MAAO,EAAnB,mBAAyB;AAAA,kBAAM,aAAAG,MAAM,UAAN,yDAAU,GAAEH,MAAO,EAAnB,yDAAuBL,OAAvB,KAAkCX,QAAQ,CAAE,GAAEgB,MAAO,EAAX;AAAhD;AAAA;AAAA;AAAA;AAAA,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMF;;MAXQF,S;AAcT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nconst inputErr = (str) => <p>Ошибка в поле <span>{str}</span></p>\r\nconst inputNull = () => <p>Поле обязательно к заполнению</p>\r\nconst EmailError = () => alert('Email-адресс уже зарегестрирован')\r\n\r\n\r\nconst options = [\r\n   {\r\n      value: \"russia\",\r\n      label: \"Россия\"\r\n   },\r\n   {\r\n      value: \"USA\",\r\n      label: \"США\"\r\n   },\r\n   {\r\n      value: \"beloruss\",\r\n      label: \"Белорусь\"\r\n   },\r\n   {\r\n      value: \"chehia\",\r\n      label: \"Чехия\"\r\n   }\r\n]\r\n\r\nconst paramsHook = {\r\n   required: \"Поле обязательно к заполнению\",\r\n   minLength: {\r\n      value: 3,\r\n      message: \"Минимум 3 символов\"\r\n   }\r\n}\r\nconst paramEmal = {\r\n   required: \"Поле обязательно к заполнению\",\r\n   pattern: {\r\n      value: /^((([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я\\.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/u,\r\n      message: \"Пожалуйста введите валидный email\"\r\n   }\r\n}\r\nfunction FormInput({ title, regist }) {\r\n   let param = paramsHook\r\n   if (regist == \"email\") {\r\n      param = paramEmal\r\n   }\r\n   return (\r\n      <label class=\"reg__label\" for={regist}>{title}:\r\n         <input class=\"reg__input\" {...register(`${regist}`, param)} type=\"text\" />\r\n         <div className=\"reg__error\"> {errors?.[`${regist}`] && <div>{errors?.[`${regist}`]?.message || inputErr(`${regist}`)}</div>} </div>\r\n      </label>\r\n   )\r\n}\r\n\r\n\r\nexport default FormInput"]},"metadata":{},"sourceType":"module"}