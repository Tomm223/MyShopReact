{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\Registration\\\\FormGet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { AccountContext } from \"../../Context/AccountProvider\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { useForm } from 'react-hook-form';\nimport { GetAxios, PostAxios } from \"../../Fetch/Fetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormGet() {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const {\n    singIn,\n    fromPage\n  } = useContext(AuthContext);\n  const {\n    usSetCheckId\n  } = useContext(AccountContext); //navigate\n\n  const navigate = useNavigate(); //form func\n\n  const NavigateTo = () => navigate(fromPage, {\n    replace: true\n  });\n\n  const inputErr = str => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0432 \\u043F\\u043E\\u043B\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 30\n  }, this);\n\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const paramsHook = {\n    required: \"Поле обязательно к заполнению\",\n    minLength: {\n      value: 5,\n      message: \"Минимум 5 символов\"\n    }\n  };\n\n  async function getUser(data) {\n    const users = await GetAxios(\"userCard\");\n    const userMatch = await users.filter(item => item.email == data.email);\n\n    if (userMatch.length) {\n      userMatch.password == data.password ? singIn(userMatch, NavigateTo) : alert(\"пароль неверный\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(getUser),\n      class: \"vhod__form\",\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"email\",\n        children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0441 \\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__emal\",\n          ...register(\"email\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) || inputErr(\"Email-адресс\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"password\",\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__pass\",\n          ...register(\"password\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message) || inputErr(\"Пароль\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: !isValid,\n        class: \"reg__btn\",\n        type: \"submit\",\n        value: \"\\u0432\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormGet, \"ItZdqbGbkLSVQgP5TFoOOMmffW0=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = FormGet;\nexport default FormGet;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormGet\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/Registration/FormGet.jsx"],"names":["React","useEffect","useRef","useState","useContext","useNavigate","useLocation","AccountContext","AuthContext","useForm","GetAxios","PostAxios","FormGet","singIn","fromPage","usSetCheckId","navigate","NavigateTo","replace","inputErr","str","register","formState","errors","isValid","handleSubmit","reset","mode","paramsHook","required","minLength","value","message","getUser","data","users","userMatch","filter","item","email","length","password","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { AccountContext } from \"../../Context/AccountProvider\";\r\nimport { AuthContext } from \"../../Context/AuthProvider\";\r\nimport { useForm } from 'react-hook-form'\r\nimport { GetAxios, PostAxios } from \"../../Fetch/Fetching\"\r\n\r\nfunction FormGet() {\r\n   const { singIn, fromPage } = useContext(AuthContext)\r\n   const { usSetCheckId } = useContext(AccountContext)\r\n   //navigate\r\n   const navigate = useNavigate()\r\n   //form func\r\n\r\n   const NavigateTo = () => navigate(fromPage, { replace: true })\r\n   const inputErr = (str) => <p>Ошибка в поле <span>{str}</span></p>\r\n   const {\r\n      register,\r\n      formState: { errors, isValid },\r\n      handleSubmit,\r\n      reset\r\n   } = useForm({\r\n      mode: \"onBlur\",\r\n   })\r\n\r\n\r\n   const paramsHook = {\r\n      required: \"Поле обязательно к заполнению\",\r\n      minLength: {\r\n         value: 5,\r\n         message: \"Минимум 5 символов\"\r\n      }\r\n   }\r\n\r\n   async function getUser(data) {\r\n      const users = await GetAxios(\"userCard\")\r\n      const userMatch = await users.filter((item) => item.email == data.email)\r\n      if (userMatch.length) {\r\n         userMatch.password == data.password ? singIn(userMatch, NavigateTo) : alert(\"пароль неверный\")\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <form onSubmit={handleSubmit(getUser)} class=\"vhod__form\" action=\"\">\r\n            <label class=\"reg__label\" for=\"email\">Адресс Электронной почты:\r\n               <input class=\"reg__input\" id=\"reg__emal\" {...register(\"email\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\">{errors?.email && <div>{errors?.email?.message || inputErr(\"Email-адресс\")}</div>}</div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"password\">Пароль:\r\n               <input class=\"reg__input\" id=\"reg__pass\" {...register(\"password\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\">{errors?.password && <div>{errors?.password?.message || inputErr(\"Пароль\")}</div>}</div>\r\n            </label>\r\n            <input disabled={!isValid} class=\"reg__btn\" type=\"submit\" value=\"войти\" />\r\n         </form>\r\n      </>\r\n   )\r\n}\r\nexport default FormGet\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}