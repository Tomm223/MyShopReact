{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\Account\\\\AccountInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useContext, useRef } from 'react';\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { SelectReact, ParamsForm } from '../UI/Form/Form';\nimport { ErrorsMessage } from \"../UI/Form/ErrorsMessage\";\nimport { GetAxios } from \"../../Fetch/Fetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction onChangeInput(setState, state) {\n  return {\n    onChange: event => setState(event.target.value),\n    value: state\n  };\n}\n\nfunction AccountInfo() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [FName, setFName] = useState();\n  const [LName, setLName] = useState();\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState(user.email);\n  const [country, setCountry] = useState();\n  const [city, setCity] = useState();\n  const [street, setStreet] = useState();\n  const [house, setHouse] = useState();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    control,\n    defaultValues,\n    setValue\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  function handlerSubmit(event) {\n    alert(\"невозможно изменить данные из-за сервера\");\n  }\n\n  const formInputs = [{\n    title: \"Адресс Электронной почты\",\n    regist: \"email\"\n  }, {\n    title: \"Имя\",\n    regist: \"firstName\"\n  }, {\n    title: \"Фамилия\",\n    regist: \"lastName\"\n  }, {\n    title: \"Пароль\",\n    regist: \"password\"\n  }, {\n    title: \"Страна\",\n    regist: \"address.country\",\n    registArray: ['address', 'country']\n  }, {\n    title: \"Город\",\n    regist: \"address.city\",\n    registArray: ['address', 'city']\n  }, {\n    title: \"Улица\",\n    regist: \"address.street\",\n    registArray: ['address', 'street']\n  }, {\n    title: \"Дом\",\n    regist: \"address.house\",\n    registArray: [\"address\", \"house\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"cab__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cab__info-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/page-icon/resume.png\",\n        alt: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cab__info-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041C\\u041E\\u042F \\u0418\\u041D\\u0424\\u041E\\u0420\\u041C\\u0410\\u0426\\u0418\\u042F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: \"\\u0412\\u044B \\u0432 \\u043B\\u044E\\u0431\\u043E\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442 \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0448\\u0443 \\u0443\\u0447\\u0435\\u0442\\u043D\\u0443\\u044E \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C \\u0438 \\u0432\\u043D\\u0435\\u0441\\u0442\\u0438 \\u043B\\u044E\\u0431\\u044B\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0432 \\u043F\\u0440\\u0438\\u0432\\u0435\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0438\\u0436\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cab__info-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmit,\n        class: \"reg__form\",\n        id: \"cab__info-form\",\n        action: \"\",\n        children: [formInputs.map(item => {\n          let registQuery = '';\n          let checkInput = true;\n\n          if (item.registArray) {\n            registQuery = item.registArray;\n            if (item.registArray[1] == \"country\") checkInput = false;\n          } else if (!item.registArray) {\n            registQuery = item.regist;\n          }\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", checkInput ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"reg__label\",\n              children: [item.title, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                defaultValues: user.email,\n                type: \"text\",\n                className: \"reg__input\",\n                ...register(item.regist, ParamsForm(item.regist))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(ErrorsMessage, {\n                errors: errors,\n                regist: registQuery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"reg__label\",\n              children: [\" \", item.title, \":\", /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: item.regist,\n                rules: ParamsForm(item.regist),\n                render: _ref => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(SelectReact, {\n                    onChange: onChange,\n                    value: value,\n                    error: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 34\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__btn\",\n          id: \"cab__btn\",\n          type: \"submit\",\n          value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AccountInfo, \"/GuN3CNiLGjd0/SmSj2scb/HSFw=\", false, function () {\n  return [useForm];\n});\n\n_c = AccountInfo;\nexport default AccountInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInfo\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/Account/AccountInfo.jsx"],"names":["React","useEffect","useState","useContext","useRef","AuthContext","useForm","Controller","SelectReact","ParamsForm","ErrorsMessage","GetAxios","onChangeInput","setState","state","onChange","event","target","value","AccountInfo","user","FName","setFName","LName","setLName","password","setPassword","email","setEmail","country","setCountry","city","setCity","street","setStreet","house","setHouse","register","formState","errors","handleSubmit","reset","control","defaultValues","setValue","mode","handlerSubmit","alert","formInputs","title","regist","registArray","map","item","registQuery","checkInput","field","fieldState","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useContext, useRef } from 'react'\r\nimport { AuthContext } from \"../../Context/AuthProvider\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { SelectReact, ParamsForm } from '../UI/Form/Form'\r\nimport { ErrorsMessage } from \"../UI/Form/ErrorsMessage\";\r\nimport { GetAxios } from \"../../Fetch/Fetching\"\r\n\r\n\r\nfunction onChangeInput(setState, state) {\r\n   return {\r\n      onChange: (event) => setState(event.target.value),\r\n      value: state\r\n   }\r\n}\r\nfunction AccountInfo() {\r\n   const { user } = useContext(AuthContext)\r\n   const [FName, setFName] = useState()\r\n   const [LName, setLName] = useState()\r\n   const [password, setPassword] = useState()\r\n   const [email, setEmail] = useState(user.email)\r\n   const [country, setCountry] = useState()\r\n   const [city, setCity] = useState()\r\n   const [street, setStreet] = useState()\r\n   const [house, setHouse] = useState()\r\n   const {\r\n      register,\r\n      formState: { errors },\r\n      handleSubmit,\r\n      reset,\r\n      control,\r\n      defaultValues,\r\n      setValue\r\n   } = useForm({\r\n      mode: \"onChange\"\r\n   })\r\n\r\n   function handlerSubmit(event) {\r\n      alert(\"невозможно изменить данные из-за сервера\")\r\n   }\r\n\r\n   const formInputs = [\r\n      {\r\n         title: \"Адресс Электронной почты\",\r\n         regist: \"email\"\r\n      },\r\n      {\r\n         title: \"Имя\",\r\n         regist: \"firstName\",\r\n      },\r\n      {\r\n         title: \"Фамилия\",\r\n         regist: \"lastName\",\r\n      },\r\n      {\r\n         title: \"Пароль\",\r\n         regist: \"password\",\r\n      },\r\n      {\r\n         title: \"Страна\",\r\n         regist: \"address.country\",\r\n         registArray: ['address', 'country']\r\n      },\r\n      {\r\n         title: \"Город\",\r\n         regist: \"address.city\",\r\n         registArray: ['address', 'city']\r\n      },\r\n      {\r\n         title: \"Улица\",\r\n         regist: \"address.street\",\r\n         registArray: ['address', 'street']\r\n      },\r\n      {\r\n         title: \"Дом\",\r\n         regist: \"address.house\",\r\n         registArray: [\"address\", \"house\"]\r\n      }\r\n   ]\r\n\r\n\r\n   return (\r\n      <div class=\"cab__info\">\r\n         <div class=\"cab__info-icon\">\r\n            <img src=\"/img/page-icon/resume.png\" alt=\"info\" />\r\n         </div>\r\n         <div class=\"cab__info-title\">\r\n            <h1>МОЯ ИНФОРМАЦИЯ</h1>\r\n            <aside>Вы в любой момент можете обновить вашу учетную запись и внести любые изменения в\r\n               приведенные ниже данные.</aside>\r\n         </div>\r\n         <div class=\"cab__info-form\">\r\n            <form onSubmit={handlerSubmit} class=\"reg__form\" id=\"cab__info-form\" action=\"\">\r\n               {formInputs.map((item) => {\r\n                  let registQuery = ''\r\n                  let checkInput = true\r\n                  if (item.registArray) {\r\n                     registQuery = item.registArray\r\n                     if (item.registArray[1] == \"country\") checkInput = false\r\n                  }\r\n                  else if (!item.registArray) {\r\n                     registQuery = item.regist\r\n                  }\r\n                  return (\r\n                     <> {checkInput ?\r\n                        <label className=\"reg__label\">{item.title}:\r\n                           <input defaultValues={user.email} type=\"text\" className=\"reg__input\"\r\n                              {...register(item.regist, ParamsForm(item.regist))} />\r\n                           <ErrorsMessage errors={errors} regist={registQuery} />\r\n                        </label>\r\n                        :\r\n                        <label className=\"reg__label\"> {item.title}:\r\n                           <Controller control={control} name={item.regist} rules={ParamsForm(item.regist)}\r\n                              render={({ field: { onChange, value }, fieldState: { error } }) =>\r\n                                 <SelectReact onChange={onChange} value={value} error={error} />\r\n                              } />\r\n                        </label>\r\n                     }\r\n                     </>\r\n                  )\r\n               })}\r\n               <input class=\"reg__btn\" id=\"cab__btn\" type=\"submit\" value=\"Сохранить Изменения\" />\r\n            </form>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport default AccountInfo"]},"metadata":{},"sourceType":"module"}