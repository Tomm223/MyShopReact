{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0437\\u0430\\u0434\\u0430\\u0447\\u043D\\u0438\\u043AJS\\\\CLONES\\\\MYSHOPFREE\\\\myShopReact\\\\ReactShop\\\\react-shop\\\\src\\\\components\\\\Registration\\\\FormPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { AccountContext } from \"../../Context/AccountProvider\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { GetAxios, PostAxios } from \"../../Fetch/Fetching\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormPost() {\n  _s();\n\n  var _errors$email, _errors$firstName, _errors$lastName, _errors$password;\n\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const [errorReg, setErrorReg] = useState('');\n\n  const inputErr = str => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0432 \\u043F\\u043E\\u043B\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 30\n  }, this);\n\n  const inputNull = () => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u041F\\u043E\\u043B\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043A \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044E\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 28\n  }, this);\n\n  const EmailError = () => alert('Email-адресс уже зарегестрирован');\n\n  const useSubmitData = async data => {\n    const MassUsers = await GetAxios('userCard');\n    const massEmailMatch = await MassUsers.filter(item => item.email == data.email);\n\n    if (massEmailMatch.length) {\n      EmailError();\n    } else {\n      PostAxios();\n      reset();\n    }\n  };\n\n  const paramsHook = {\n    required: \"Поле обязательно к заполнению\",\n    minLength: {\n      value: 5,\n      message: \"Минимум 5 символов\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(useSubmitData),\n      class: \"reg__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"email\",\n        children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0441 \\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__emal\",\n          ...register(\"email\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors !== null && errors !== void 0 && (_errors$email = errors.email) !== null && _errors$email !== void 0 && _errors$email.message ? inputErr('Email') : inputNull()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 63\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"firstName\",\n        children: [\"\\u0418\\u043C\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__f-name\",\n          ...register(\"firstName\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.firstName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message) || inputErr('firstName')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 67\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"lastName\",\n        children: [\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__l-name\",\n          ...register(\"lastName\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.lastName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message) || inputErr('lastName')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 66\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"reg__label\",\n        for: \"pass\",\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"reg__input\",\n          id: \"reg__pass\",\n          ...register(\"password\", paramsHook),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg__error\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message) || inputErr('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 66\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"reg__btn\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"\\u0437\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormPost, \"j0qstRN80NTtiVdjnMhIqHuRc7M=\", false, function () {\n  return [useForm];\n});\n\n_c = FormPost;\nexport default FormPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPost\");","map":{"version":3,"sources":["C:/задачникJS/CLONES/MYSHOPFREE/myShopReact/ReactShop/react-shop/src/components/Registration/FormPost.jsx"],"names":["React","useState","useEffect","useContext","useRef","useNavigate","AccountContext","AuthContext","GetAxios","PostAxios","useForm","FormPost","register","formState","errors","isValid","handleSubmit","reset","mode","errorReg","setErrorReg","inputErr","str","inputNull","EmailError","alert","useSubmitData","data","MassUsers","massEmailMatch","filter","item","email","length","paramsHook","required","minLength","value","message","firstName","lastName","password"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,sBAApC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAEjB,QAAM;AACHC,IAAAA,QADG;AAEHC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAFR;AAGHC,IAAAA,YAHG;AAIHC,IAAAA;AAJG,MAKFP,OAAO,CAAC;AACTQ,IAAAA,IAAI,EAAE;AADG,GAAD,CALX;AASA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMoB,QAAQ,GAAIC,GAAD,iBAAS;AAAA,qGAAiB;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B;;AACA,QAAMC,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB;;AACA,QAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA9B;;AAEA,QAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;AACnC,UAAMC,SAAS,GAAG,MAAMpB,QAAQ,CAAC,UAAD,CAAhC;AACA,UAAMqB,cAAc,GAAG,MAAMD,SAAS,CAACE,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACC,KAAL,IAAcL,IAAI,CAACK,KAA9C,CAA7B;;AACA,QAAIH,cAAc,CAACI,MAAnB,EAA2B;AACxBT,MAAAA,UAAU;AACZ,KAFD,MAGK;AACFf,MAAAA,SAAS;AACTQ,MAAAA,KAAK;AACP;AACH,GAVD;;AAcA,QAAMiB,UAAU,GAAG;AAChBC,IAAAA,QAAQ,EAAE,+BADM;AAEhBC,IAAAA,SAAS,EAAE;AACRC,MAAAA,KAAK,EAAE,CADC;AAERC,MAAAA,OAAO,EAAE;AAFD;AAFK,GAAnB;AAQA,sBACG;AAAA,2BACG;AAAM,MAAA,QAAQ,EAAEtB,YAAY,CAACU,aAAD,CAA5B;AAA6C,MAAA,KAAK,EAAC,WAAnD;AAAA,8BACG;AAAO,QAAA,KAAK,EAAC,YAAb;AAA0B,QAAA,GAAG,EAAC,OAA9B;AAAA,2KACG;AAAO,UAAA,KAAK,EAAC,YAAb;AAA0B,UAAA,EAAE,EAAC,WAA7B;AAAA,aAA6Cd,QAAQ,CAAC,OAAD,EAAUsB,UAAV,CAArD;AAA4E,UAAA,IAAI,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,0BAA8B,CAAApB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEkB,KAAR,kBAAiB;AAAA,sBAAMlB,MAAM,SAAN,IAAAA,MAAM,WAAN,qBAAAA,MAAM,CAAEkB,KAAR,wDAAeM,OAAf,GAAyBjB,QAAQ,CAAC,OAAD,CAAjC,GAA6CE,SAAS;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAKG;AAAO,QAAA,KAAK,EAAC,YAAb;AAA0B,QAAA,GAAG,EAAC,WAA9B;AAAA,uDACG;AAAO,UAAA,KAAK,EAAC,YAAb;AAA0B,UAAA,EAAE,EAAC,aAA7B;AAAA,aAA+CX,QAAQ,CAAC,WAAD,EAAcsB,UAAd,CAAvD;AAAkF,UAAA,IAAI,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,0BAA8B,CAAApB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEyB,SAAR,kBAAqB;AAAA,sBAAM,CAAAzB,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAEyB,SAAR,wEAAmBD,OAAnB,KAA8BjB,QAAQ,CAAC,WAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,eAUG;AAAO,QAAA,KAAK,EAAC,YAAb;AAA0B,QAAA,GAAG,EAAC,UAA9B;AAAA,+EACG;AAAO,UAAA,KAAK,EAAC,YAAb;AAA0B,UAAA,EAAE,EAAC,aAA7B;AAAA,aAA+CT,QAAQ,CAAC,UAAD,EAAasB,UAAb,CAAvD;AAAiF,UAAA,IAAI,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,0BAA8B,CAAApB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE0B,QAAR,kBAAoB;AAAA,sBAAM,CAAA1B,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAE0B,QAAR,sEAAkBF,OAAlB,KAA6BjB,QAAQ,CAAC,UAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH,eAeG;AAAO,QAAA,KAAK,EAAC,YAAb;AAA0B,QAAA,GAAG,EAAC,MAA9B;AAAA,yEACG;AAAO,UAAA,KAAK,EAAC,YAAb;AAA0B,UAAA,EAAE,EAAC,WAA7B;AAAA,aAA8CT,QAAQ,CAAC,UAAD,EAAasB,UAAb,CAAtD;AAAgF,UAAA,IAAI,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,0BAA8B,CAAApB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE2B,QAAR,kBAAoB;AAAA,sBAAM,CAAA3B,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAE2B,QAAR,sEAAkBH,OAAlB,KAA6BjB,QAAQ,CAAC,UAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAfH,eAoBG;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,QAAQ,EAAE,CAACN,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,mBADH;AA0BF;;GAjEQJ,Q;UAOFD,O;;;KAPEC,Q;AAkET,eAAeA,QAAf","sourcesContent":["\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useRef } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AccountContext } from \"../../Context/AccountProvider\";\r\nimport { AuthContext } from \"../../Context/AuthProvider\";\r\n\r\nimport { GetAxios, PostAxios } from \"../../Fetch/Fetching\"\r\nimport { useForm } from 'react-hook-form'\r\nfunction FormPost() {\r\n\r\n   const {\r\n      register,\r\n      formState: { errors, isValid },\r\n      handleSubmit,\r\n      reset\r\n   } = useForm({\r\n      mode: \"onBlur\"\r\n   })\r\n\r\n   const [errorReg, setErrorReg] = useState('')\r\n\r\n   const inputErr = (str) => <p>Ошибка в поле <span>{str}</span></p>\r\n   const inputNull = () => <p>Поле обязательно к заполнению</p>\r\n   const EmailError = () => alert('Email-адресс уже зарегестрирован')\r\n\r\n   const useSubmitData = async (data) => {\r\n      const MassUsers = await GetAxios('userCard')\r\n      const massEmailMatch = await MassUsers.filter((item) => item.email == data.email)\r\n      if (massEmailMatch.length) {\r\n         EmailError()\r\n      }\r\n      else {\r\n         PostAxios()\r\n         reset()\r\n      }\r\n   }\r\n\r\n\r\n\r\n   const paramsHook = {\r\n      required: \"Поле обязательно к заполнению\",\r\n      minLength: {\r\n         value: 5,\r\n         message: \"Минимум 5 символов\"\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <form onSubmit={handleSubmit(useSubmitData)} class=\"reg__form\">\r\n            <label class=\"reg__label\" for=\"email\">Адресс Электронной почты:\r\n               <input class=\"reg__input\" id=\"reg__emal\" {...register(\"email\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.email && <div>{errors?.email?.message ? inputErr('Email') : inputNull()}</div>} </div>\r\n            </label>\r\n            <label class=\"reg__label\" for=\"firstName\">Имя:\r\n               <input class=\"reg__input\" id=\"reg__f-name\" {...register(\"firstName\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.firstName && <div>{errors?.firstName?.message || inputErr('firstName')}</div>} </div>\r\n\r\n            </label>\r\n            <label class=\"reg__label\" for=\"lastName\">Фамилия:\r\n               <input class=\"reg__input\" id=\"reg__l-name\" {...register(\"lastName\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.lastName && <div>{errors?.lastName?.message || inputErr('lastName')}</div>} </div>\r\n\r\n            </label>\r\n            <label class=\"reg__label\" for=\"pass\">Пароль:\r\n               <input class=\"reg__input\" id=\"reg__pass\"  {...register(\"password\", paramsHook)} type=\"text\" />\r\n               <div className=\"reg__error\"> {errors?.password && <div>{errors?.password?.message || inputErr('password')}</div>} </div>\r\n\r\n            </label>\r\n            <button class=\"reg__btn\" type=\"submit\" disabled={!isValid} >зарегестрироваться </button>\r\n         </form>\r\n      </>\r\n   )\r\n}\r\nexport default FormPost\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}